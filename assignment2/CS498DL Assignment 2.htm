<!DOCTYPE html>
<!-- saved from url=(0055)http://slazebni.cs.illinois.edu/fall20/assignment2.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style class="darkreader darkreader--fallback" media="screen"></style><style class="darkreader darkreader--text" media="screen">*:not(pre) {
  -webkit-text-stroke: 0.1px !important;
  text-stroke: 0.1px !important;
}</style><style class="darkreader darkreader--invert" media="screen">.jfk-bubble.gtx-bubble, embed[type="application/pdf"] {
    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) sepia(30%) !important;
}</style><style class="darkreader darkreader--inline" media="screen">[data-darkreader-inline-bgcolor] {
  background-color: var(--darkreader-inline-bgcolor) !important;
}
[data-darkreader-inline-bgimage] {
  background-image: var(--darkreader-inline-bgimage) !important;
}
[data-darkreader-inline-border] {
  border-color: var(--darkreader-inline-border) !important;
}
[data-darkreader-inline-border-bottom] {
  border-bottom-color: var(--darkreader-inline-border-bottom) !important;
}
[data-darkreader-inline-border-left] {
  border-left-color: var(--darkreader-inline-border-left) !important;
}
[data-darkreader-inline-border-right] {
  border-right-color: var(--darkreader-inline-border-right) !important;
}
[data-darkreader-inline-border-top] {
  border-top-color: var(--darkreader-inline-border-top) !important;
}
[data-darkreader-inline-boxshadow] {
  box-shadow: var(--darkreader-inline-boxshadow) !important;
}
[data-darkreader-inline-color] {
  color: var(--darkreader-inline-color) !important;
}
[data-darkreader-inline-fill] {
  fill: var(--darkreader-inline-fill) !important;
}
[data-darkreader-inline-stroke] {
  stroke: var(--darkreader-inline-stroke) !important;
}
[data-darkreader-inline-outline] {
  outline-color: var(--darkreader-inline-outline) !important;
}</style><style class="darkreader darkreader--variables" media="screen">:root {
   --darkreader-neutral-background: #181a1b;
   --darkreader-neutral-text: #e8e6e3;
   --darkreader-selection-background: #174375;
   --darkreader-selection-text: #d9cfbe;
}</style><style class="darkreader darkreader--user-agent" media="screen">html {
    background-color: #171716 !important;
}
html, body, input, textarea, select, button {
    background-color: #171716;
}
html, body, input, textarea, select, button {
    border-color: #696152;
    color: #d9cfbe;
}
a {
    color: #4c7fb8;
}
table {
    border-color: #51524d;
}
::placeholder {
    color: #a59a89;
}
input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
    background-color: #4d4e12 !important;
    color: #d9cfbe !important;
}
::selection {
    background-color: #174375 !important;
    color: #d9cfbe !important;
}
::-moz-selection {
    background-color: #174375 !important;
    color: #d9cfbe !important;
}</style>
        <title>CS498DL Assignment 2</title>
        
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="darkreader" content="457fa6d7de4b82e2b95cc7232634fe2b"><style class="darkreader darkreader--override" media="screen">.vimvixen-hint {
    background-color: #654a06 !important;
    border-color: #b99b33 !important;
    color: #e0d1ae !important;
}
::placeholder {
    opacity: 0.5 !important;
}</style></head>
    <body>
        <h2>Fall 2020 CS498DL</h2>
        <h2>Assignment 2: Multi-Layer Neural Networks</h2>
        <h3>Due date: Tuesday, October 6th, 11:59:59 PM</h3>
        <small>Created by Daniel McKee and Maghav Kumar. Updated by Adam Stewart and Shivani Kamtikar.</small>
        <br>
        <br>
        <img src="./CS498DL Assignment 2_files/nn.gif" width="600"><br>
        <small><a href="https://gfycat.com/gifs/detail/MiniatureDependentCob">Source</a> (<a href="https://www.youtube.com/watch?v=aircAruvnKk">video</a>)</small>
        <br>
        <br>
        <p>In this assignment you will implement multi-layer neural networks on the <a href="https://www.cs.toronto.edu/~kriz/cifar.html">CIFAR-10</a> image classification dataset, which was used in Assignment 1 as well. The goal of this assignment is to help you understand the fundamentals of neural networks and backpropagation. Specifically, you will write your own forward and backward pass and train two- and three-layer networks with SGD and Adam optimizers. You will also get experience with hyperparameter tuning and using proper train/test/validation data splits. The format of this assignment is inspired by the <a href="http://cs231n.github.io/assignments2020/assignment1/">Stanford CS231n assignments</a>, and we have borrowed some of their data loading and instructions.</p>

        <p><b>Download the starting code <a href="http://slazebni.cs.illinois.edu/fall20/assignment2/assignment2.zip">here</a></b>.</p>

        <p>The top-level notebook (<code>neural_network.ipynb</code>) will guide you through all the steps of training a neural network on CIFAR-10. You will implement the multi-layer neural network in the <code>neural_net.py</code> file.</p>

        <p>We also provide you with a notebook to help with debugging and testing your neural network implementation by using a toy dataset along with numeric gradient checks. It is found in <code>develop_neural_network.ipynb</code>. <b>NOTE: This file is only for debugging/experimenting/testing purposes. It will not be graded, and you are not required to submit it.</b></p>

        <p>None of the parts of this assignment require use of a machine with a GPU. You may complete the assignment using your local machine or you may use Google Colaboratory.</p>

        <h3>Environment Setup (Local)</h3>

        <p>If you will be completing the assignment on a local machine then you will need a python environment set up with the appropriate packages.</p>

        <p>We suggest that you use Anaconda to manage python package dependencies (<a href="https://www.anaconda.com/download">https://www.anaconda.com/download</a>). This guide provides useful information on how to use Conda: <a href="https://conda.io/docs/user-guide/getting-started.html">https://conda.io/docs/user-guide/getting-started.html</a>.</p>

        <h3>Data Setup (Local)</h3>

        <p>Once you have unzipped the zip file, navigate to the cifar10 directory in assignment2 and execute the <code>get_datasets.py</code> script provided:</p>
        <pre><code>
$ cd assignment2/cifar10/
$ python3 get_datasets.py
        </code></pre>

        <h3>Data Setup (For Colaboratory)</h3>

        <p>If you are using Google Colaboratory for this assignment you will need to do some additional setup steps.</p>

        <p>Download the assignment zip file and follow the steps above to download CIFAR-10 to your local machine. Next, you should make a folder in your Google Drive to hold all of your assignment files and upload the entire assignment folder (including the cifar10 dataset you downloaded) into this Google drive file.</p>

        <p>You will now need to open the Assignment 2 IPython notebook file from your Google Drive folder in Colaboratory and run a few setup commands. However, we have condensed all the important commands you need to run into an <b><a href="http://slazebni.cs.illinois.edu/fall20/assignment2/colab_setup.ipynb">IPython notebook</a></b> (you can disregard the section on GPU setup for this assignment).</p>

        <h3>IPython</h3>

        <p>The assignment is given to you in the <code>neural_network.ipynb</code> file. As mentioned, if you are using Colaboratory, you can open the IPython notebook directly in Colaboratory. If you are using a local machine, ensure that IPython is installed (<a href="https://ipython.org/install.html">https://ipython.org/install.html</a>). You may then navigate the assignment directory in terminal and start a local IPython server using the <code>jupyter notebook</code> command.</p>

        <h3>Submission Instructions:</h3>

        <p>The assignment deliverables are as follows. If you are working in a pair, only one designated student should make the submission.</p>
        <ol>
            <li>Submit your <b>output Kaggle CSV file</b> from each of the two parts to their corresponding Kaggle competition webpages:</li>
            <ul>
                <li><a href="https://www.kaggle.com/c/cs-498-dl-assignment-2-2-layer-nn-sgd">2-layer SGD</a>
                </li><li><a href="https://www.kaggle.com/c/cs-498-dl-assignment-2-3-layer-nn-sgd">3-layer SGD</a> 
                </li><li><a href="https://www.kaggle.com/c/cs-498-dl-assignment-2-2-layer-nn-adam">2-layer Adam</a>
                </li><li><a href="https://www.kaggle.com/c/cs-498-dl-assignment-2-3-layer-nn-adam">3-layer Adam</a>
            </li></ul><br>
        <li>Upload three files to <b><a href="https://compass2g.illinois.edu/">Compass2g</a></b>:</li>
        <ol>
            <li>All of your code (python files and ipynb file) <b>in a single ZIP file</b>. The filename should be <b>netid_mp2_code.zip</b>.</li>
            <li>Your IPython notebook with output cells converted to <b>PDF format</b>. The filename should be <b>netid_mp2_output.pdf</b>.</li>
            <li>A brief report in PDF format using <a href="https://docs.google.com/document/d/1cE1Ujh2WyWGwFpKRtJp12Bb1jQv4Fw6QC1aEokY-qjg/edit?usp=sharing">this template</a>. The filename should be <b>netid_mp2_report.pdf</b>.</li>
        </ol><br>
        <i>Don't forget to hit "Submit" after uploading your files, otherwise we will not receive your submission!</i>
        </ol>

        <p>Please refer to <a href="http://slazebni.cs.illinois.edu/fall20/policies.html">course policies</a> on collaborations, late submission, and extension requests.</p>
    

</body></html>